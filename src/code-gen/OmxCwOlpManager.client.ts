/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.30.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { CosmWasmClient, SigningCosmWasmClient, ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { Coin, StdFee } from "@cosmjs/amino";
import { InstantiateMsg, ExecuteMsg, Addr, SetAdminExec, QueryMsg, PriceQuery, Uint128 } from "./OmxCwOlpManager.types";
export interface OmxCwOlpManagerReadOnlyInterface {
  contractAddress: string;
  price: () => Promise<Uint128>;
}
export class OmxCwOlpManagerQueryClient implements OmxCwOlpManagerReadOnlyInterface {
  client: CosmWasmClient;
  contractAddress: string;

  constructor(client: CosmWasmClient, contractAddress: string) {
    this.client = client;
    this.contractAddress = contractAddress;
    this.price = this.price.bind(this);
  }

  price = async (): Promise<Uint128> => {
    return this.client.queryContractSmart(this.contractAddress, {
      price: {}
    });
  };
}
export interface OmxCwOlpManagerInterface extends OmxCwOlpManagerReadOnlyInterface {
  contractAddress: string;
  sender: string;
  setAdmin: ({
    admin
  }: {
    admin: Addr;
  }, fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
}
export class OmxCwOlpManagerClient extends OmxCwOlpManagerQueryClient implements OmxCwOlpManagerInterface {
  client: SigningCosmWasmClient;
  sender: string;
  contractAddress: string;

  constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string) {
    super(client, contractAddress);
    this.client = client;
    this.sender = sender;
    this.contractAddress = contractAddress;
    this.setAdmin = this.setAdmin.bind(this);
  }

  setAdmin = async ({
    admin
  }: {
    admin: Addr;
  }, fee: number | StdFee | "auto" = "auto", memo?: string, _funds?: Coin[]): Promise<ExecuteResult> => {
    return await this.client.execute(this.sender, this.contractAddress, {
      set_admin: {
        admin
      }
    }, fee, memo, _funds);
  };
}